# mod UUID to avoid name collisions: edb21cf5-942a-43e6-b418-106a875e9b0f
# UUID mod 2^21-1 is used as the event ID pattern: 634736xxx

## Shatter setup

# Before the initiation event proper is fired, the player is presented with events to pick shatter
# parameters.

# Parameter: history-based or parent-based release.
#
# When releasing a country through the `release` command the game relies on that country's history
# file to set it up, e.g. for picking techs and the right government type. The catch is that history
# files normally only have bookmark data, which is to say that is only really suitable for 1 January
# 1836 (or the A House Divided 1861 bookmark date, though that is actually untested). Even then some
# countries might have their historical data set up for a later date, e.g. if it is a revolt tag. As
# the game progresses, this historical data may become stale resulting e.g. in countries being
# released with a large tech deficit.
#
# When releasing a country through the `release_vassal` command the game relies on the originating
# country to set the new one up. (As the name implies it also sets up a generic puppet-overlord
# relationship, but that can easily be tweaked through subsequente `release_vassal` and/or
# `create_vassal` commands.) Consequently the country ends up with the same techs, inventions, and
# government type as the parent.
country_event = {
    id      = 634736000
    title   = edb21cf5-942a-43e6-b418-106a875e9b0f.history-or-parent.title
    desc    = edb21cf5-942a-43e6-b418-106a875e9b0f.history-or-parent.desc
    picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

    is_triggered_only = yes

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.history-or-parent.opt0

        random_owned = {
            limit = {
                owner = {
                    NOT = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736001 }
        }

        random_owned = {
            limit = {
                owner = {
                    OR = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736002 }
        }

        ai_chance = { factor = 1 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.history-or-parent.opt1

        set_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.parent-based-releases

        random_owned = {
            limit = {
                owner = {
                    NOT = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736001 }
        }

        random_owned = {
            limit = {
                owner = {
                    OR = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736002 }
        }

        ai_chance = { factor = 0 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.history-or-parent.opt2

        set_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.history-based-releases

        random_owned = {
            limit = {
                owner = {
                    NOT = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736001 }
        }

        random_owned = {
            limit = {
                owner = {
                    OR = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736002 }
        }

        ai_chance = { factor = 0 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.history-or-parent.opt3

        set_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.parent-based-releases

        random_owned = {
            limit = {
                owner = {
                    NOT = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736001 }
        }

        random_owned = {
            limit = {
                owner = {
                    OR = {
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
                        has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                    }
                }
            }

            owner = { country_event = 634736002 }
        }

        ai_chance = { factor = 0 }
    }
}

country_event = {
    id      = 634736001
    title   = edb21cf5-942a-43e6-b418-106a875e9b0f.releasable-only.title
    desc    = edb21cf5-942a-43e6-b418-106a875e9b0f.releasable-only.desc
    picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

    is_triggered_only = yes

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.releasable-only.opt0

        country_event = 634736002

        ai_chance = { factor = 1 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.releasable-only.opt1

        set_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables

        country_event = 634736002

        ai_chance = { factor = 0 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.releasable-only.opt2

        set_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables

        country_event = 634736002

        ai_chance = { factor = 0 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.releasable-only.opt3

        set_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables

        country_event = 634736002

        ai_chance = { factor = 0 }
    }
}

# Initiation event
country_event = {
    id      = 634736002
    title   = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering.title
    desc    = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering.desc
    picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

    is_triggered_only = yes
    allow_multiple_instances = no # anti-spam safety, but only for singleplayer

    immediate = {
        ## Set saved parameters

        random_owned = {
            limit = {
                owner = {
                    has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.parent-based-releases
                }
            }

            set_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.parent-based-releases
        }

        random_owned = {
            limit = {
                owner = {
                    has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                }
            }

            set_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
        }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering.opt0

        clr_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering

        # N.b. scopes such as any_country inside events fired from a decision appears to follow
        # decision rules

        ## Break every country

        country_event = 634736010

        any_country = {
            limit = {
                exists = yes
            }

            country_event = 634736010
        }

        ai_chance = { factor = 0 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering.opt1

        clr_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering

        ai_chance = { factor = 1 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering.opt2

        clr_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering

        clr_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.history-based-releases
        clr_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.parent-based-releases

        clr_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.only-releasables
        clr_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables

        ai_chance = { factor = 0 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering.opt3

        clr_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.shattering

        set_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.no-more-shatter

        ai_chance = { factor = 0 }
    }
}

## Shatter machinery

country_event = {
    id      = 634736010
    title   = edb21cf5-942a-43e6-b418-106a875e9b0f.break.title
    desc    = edb21cf5-942a-43e6-b418-106a875e9b0f.break.desc
    picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

    is_triggered_only = yes
    allow_multiple_instances = yes

    immediate = {
        random_owned = {
            limit = {
                owner = {
                    is_vassal = yes
                }
            }

            owner = {
                overlord = {
                    release_vassal = THIS
                }
            }
        }

        ## release non-unions first

        any_country = {
            limit = {
                exists = no
                any_core = {
                    owned_by = THIS
                }
                OR = {
                    is_cultural_union = no
                    has_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.releasing-cultural-unions
                }
            }

            country_event = 634736011
        }

        # resume breadth-first traversal
        any_country = {
            limit = {
                has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.to-be-broken
                is_cultural_union = no
            }

            clr_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.to-be-broken
            country_event = 634736010
        }

        ## go for cultural unions second

        set_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.releasing-cultural-unions

        any_country = {
            limit = {
                exists = no
                any_core = {
                    owned_by = THIS
                }
            }

            country_event = 634736011
        }

        # resume breadth-first traversal
        any_country = {
            limit = {
                has_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.to-be-broken
            }

            clr_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.to-be-broken
            country_event = 634736010
        }

        clr_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.releasing-cultural-unions
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.break.opt0

        ai_chance = { factor = 1 }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.break.opt1

        set_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.no-more-shatter

        ai_chance = { factor = 0 }
    }
}

country_event = {
    id      = 634736011
    title   = edb21cf5-942a-43e6-b418-106a875e9b0f.petition.title
    desc    = edb21cf5-942a-43e6-b418-106a875e9b0f.petition.desc
    picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

    is_triggered_only = yes
    allow_multiple_instances = yes

    immediate = {
        FROM = {
            random_owned = {
                limit = {
                    owner = {
                        # avoid self-destruction
                        any_owned_province = {
                            NOT = {
                                is_core = THIS
                            }
                        }

                        # too strict
                        #is_possible_vassal = THIS

                        THIS = {
                            exists = no

                            OR = {
                                is_releasable_vassal = yes
                                has_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.allow-unreleasables
                            }

                            OR = {
                                is_cultural_union = no
                                has_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.releasing-cultural-unions
                            }
                        }
                    }
                }

                owner = {
                    # setup FROM for remove_core
                    country_event = 634736012
                }
            }
        }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.petition.opt0
    }
}

country_event = {
    id      = 634736012
    title   = edb21cf5-942a-43e6-b418-106a875e9b0f.release.title
    desc    = edb21cf5-942a-43e6-b418-106a875e9b0f.release.desc
    picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

    is_triggered_only = yes
    # We could allow this if we wanted. One way or the other the event *is* fired multiple times
    # against `THIS` (from initiating event 002), and the `immediate` block appears to be processed
    # every time regardless of `allow_multiple_instances`.
    #
    # That is, from the perspective of the human player, a single event is received (if multiple
    # instances are disallowed) notifying that a single arbitrary country has been released--and yet
    # every other release candidates have appeared on the map despite a lack of associated
    # notification event. Setting `allow_multiple_instances` results in multiple notifications, with
    # identical effects. To achieve this we are careful not performing anything in the `option`
    # block.
    #
    # Nonetheless we disallow `allow_multiple_instances` to spare players the notification spam.
    #allow_multiple_instances = yes

    immediate = {
        random_owned = {
            limit = {
                NOT = { has_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.parent-based-releases }
            }

            owner = { release = FROM }
        }

        random_owned = {
            limit = {
                has_global_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.parent-based-releases
            }

            owner = { release_vassal = FROM release_vassal = FROM }
        }

        random_country = {
            limit = {
                tag = FROM
                is_vassal = yes
            }

            overlord = {
                release_vassal = FROM
            }
        }

        random_country = {
            limit = {
                tag = FROM
            }

            any_owned = {
                remove_core = THIS
            }

            # mark for breadth-first traversal
            set_country_flag = edb21cf5-942a-43e6-b418-106a875e9b0f.to-be-broken
        }
    }

    option = {
        name = edb21cf5-942a-43e6-b418-106a875e9b0f.release.opt0
    }
}

## The following is for development purposes only ##

# country_event = {
#     id      = 634736100
#     title   = "DEBUG Shatter: diagnostic"
#     desc    = ""
#     picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

#     is_triggered_only = yes

#     option = {
#         name = "Launch diagnostic."

#         # N.b. mind event-from-decision restrictions

#         ## outstanding vassals on the map

#         random_owned = {
#             limit = {
#                 owner = {
#                     is_vassal = yes
#                 }
#             }

#             owner = {
#                 country_event = 634736101
#             }
#         }

#         any_country = {
#             limit = {
#                 exists = yes
#                 is_vassal = yes
#             }

#             country_event = 634736101
#         }

#         ## outstanding non-existing

#         any_country = {
#             limit = {
#                 exists = no
#                 any_core = {
#                     is_empty = no
#                 }
#                 NOT = {
#                     tag = REB
#                     tag = UTI
#                     ruling_party = dominion_conservative
#                     capital_scope = {
#                         is_capital = yes
#                         is_empty = yes
#                     }
#                 }

#                 is_releasable_vassal = yes
#             }

#             country_event = 634736102
#         }

#         any_country = {
#             limit = {
#                 exists = no
#                 any_core = {
#                     is_empty = no
#                 }
#                 NOT = {
#                     tag = REB
#                     tag = UTI
#                     ruling_party = dominion_conservative
#                     capital_scope = {
#                         is_capital = yes
#                         is_empty = yes
#                     }
#                 }

#                 is_releasable_vassal = no
#             }

#             country_event = 634736103
#         }
#     }
# }

# country_event = {
#     id      = 634736101
#     title   = "DEBUG Shatter: $COUNTRY$ is a vassal"
#     desc    = ""
#     picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

#     is_triggered_only = yes
#     allow_multiple_instances = yes

#     option = {
#         name = "Respond to diagnostic request."
#     }
# }

# country_event = {
#     id      = 634736102
#     title   = "DEBUG Shatter: $COUNTRY$ ($CAPITAL$) does not exist, but maybe should"
#     desc    = ""
#     picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

#     is_triggered_only = yes

#     option = {
#         name = "Respond to diagnostic request."

#         capital_scope = {
#             owner = {
#                 country_event = 634736104
#             }
#         }
#     }
# }

# country_event = {
#     id      = 634736103
#     title   = "DEBUG Shatter: $COUNTRY$ ($CAPITAL$) does not exist, maybe that's fine"
#     desc    = ""
#     picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

#     is_triggered_only = yes

#     option = {
#         name = "Respond to diagnostic request."

#         capital_scope = {
#             owner = {
#                 country_event = 634736104
#             }
#         }
#     }
# }

# country_event = {
#     id      = 634736104
#     title   = "DEBUG Shatter: $COUNTRY$ holds the capital of $FROMCOUNTRY$"
#     desc    = ""
#     picture = edb21cf5-942a-43e6-b418-106a875e9b0f_shatter_event

#     is_triggered_only = yes
#     allow_multiple_instances = yes

#     option = {
#         name = "Respond to diagnostic request"
#     }
# }
